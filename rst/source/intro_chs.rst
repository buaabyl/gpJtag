< 
:doc:`主页<index>` /
:doc:`目录<index_chs>` /
>

前言
========

对于接触过嵌入式的工程师，一般都会听过JTAG、Jlink之类的名词。
其中不少人知道JTAG的原理。不过大家都是在用JTAG的功能，
很少或者不关注实现的细节。

而我其实对JTAG的实现更感兴趣，所以尝试着总结一下自己一些经验，
并把资料和弄清楚的一些东西汇总一下。
就JTAG来讲，是Joint Test Action Group的缩写。
常见的芯片如ARM、CPLD、FPGA都带有JTAG接口，可以用于更新固件，测试IC的IO功能。
也有不少的通信芯片带了JTAG功能，只不过用户都不需要了解，比如以太网IC。

自己在做过一个专用设备的JTAG调试器后，想着是否能弄明白Xilinx的JTAG实现细节。
并做到有理有据，可以让每接触过的人快速入门。
如果只是想了解ARM的JTAG，强烈推荐开源的OpenOCD，这个是非常好的一个JTAG工具。
但是代码过于庞杂，所以定制起来也会比较麻烦。
换个角度看，如果你只是想实现一个JTAG适配器，并不算太难。

本文的思路是先介绍Xilinx的CPLD，然后分析它的配置流，弄清楚内部的实现方式，
然后再基于这个来改写JTAG调试器（虽然我已经做了一个）。
一是我用CPLD和FPGA比较多，二是CPLD相对FPGA简单一点，所以选择这个切入点。




